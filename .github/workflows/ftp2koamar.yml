# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: npm install, build
        run: |
          npm install
          npm run build --if-present
          npm run test --if-present
      - name: Upload public dir
        uses: actions/upload-artifact@v2
        with:
          name: public
          path: public
        env:
          CI: true
  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download public dir
        uses: actions/download-artifact@v2
        with:
          name: public
      - name: Simple FTP deploy
        # You may pin to the exact commit or the version.
        # uses: kevinpainchaud/simple-ftp-deploy-action@ff2cc698570eab5c9accc168e7de7781bcde6f38
        uses: kevinpainchaud/simple-ftp-deploy-action@v1.1.0
        with:
          # FTP host
          ftp_host: ${{ secrets.FTP_SERVER }}
          # FTP username
          ftp_username: ${{ secrets.FTP_USERNAME }}
          # FTP password
          ftp_password: ${{ secrets.FTP_PASSWORD }}
          # The local folder to copy
          local_source_dir: 'public'
          # The remote folder
          dist_target_dir: 'blog'
          # Delete files not present in the local folder on the remote folder
          delete: # optional, default is false
          # Ignore file(s) and/or directorie(s)
          exclude: # optional, default is
          # Disable SSL certificate verification
          disable_ssl_certificate_verification: # optional, default is true
